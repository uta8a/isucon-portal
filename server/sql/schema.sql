CREATE TABLE users (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id TEXT NOT NULL,
  display_name TEXT NOT NULL,
  icon_path TEXT NOT NULL,
  user_role ENUM('player', 'admin') NOT NULL,
  team_id BIGINT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (team_id) REFERENCES teams(id)
);

CREATE TABLE teams (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  team_name TEXT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE server_info (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  server_address TEXT NOT NULL,
  team_id BIGINT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (team_id) REFERENCES teams(id)
);

CREATE TABLE benchmark_logs (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  server_id BIGINT NOT NULL,
  score BIGINT, -- if failed, NULL
  log_output JSON NOT NULL, -- if none, `{}`
  log_timestamp DATETIME NOT NULL, -- get time of benchmarker run from log_output
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (server_id) REFERENCES server_list(id)
);
